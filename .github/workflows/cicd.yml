# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Permission
      run: chmod 744 gradlew
      
    - name: Build Spring
      run: ./gradlew clean build

    - name: Build Docker image
      run: docker build -t ${{secrets.DOCKER_USERNAME}}/${{secrets.DOCKER_REPOSITORY}} .

    - name: Docker Login
      uses: docker/login-action@v3.0.0
      with:
        username: ${{secrets.DOCKER_USERNAME}}
        password: ${{secrets.DOCKER_PASSWORD}}
        
    - name: Docker push
      run: docker push ${{secrets.DOCKER_USERNAME}}/${{secrets.DOCKER_REPOSITORY}}

    - name: SSH Remote Commands
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{secrets.HOST_IP}}
        username: ${{secrets.HOST_USERNANE}}
        key: ${{secrets.HOST_KEY}}
        script: |
          sudo docker pull ${{secrets.DOCKER_USERNAME}}/${{secrets.DOCKER_REPOSITORY}}
          sudo docker stop ${{secrets.DOCKER_REPOSITORY}}
          sudo docker rm ${{secrets.DOCKER_REPOSITORY}}
          sudo docker run --name ${{secrets.DOCKER_REPOSITORY}} -d -p 8080:8080 ${{secrets.DOCKER_USERNAME}}/${{secrets.DOCKER_REPOSITORY}}
          
